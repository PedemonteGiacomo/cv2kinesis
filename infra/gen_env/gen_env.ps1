param(
  # nomi degli stack CDK
  [string] $ImgStack = "ImgPipeline",
  [string] $PacsStack = "PacsApi"
)

Write-Host "ðŸ”„ Recupero Outputs dallo stack $ImgStack..."
$imgOutputs = (aws cloudformation describe-stacks --stack-name $ImgStack | ConvertFrom-Json).Stacks[0].Outputs

Write-Host "ðŸ”„ Recupero Outputs dallo stack $PacsStack..."
$pacsOutputs = (aws cloudformation describe-stacks --stack-name $PacsStack | ConvertFrom-Json).Stacks[0].Outputs

function Get-OutputValue {
  param($Outputs, $Key)
  $match = $Outputs | Where-Object { $_.OutputKey -eq $Key }
  if ($match) { return $match[0].OutputValue }
  else { return "" }
}




# Outputs da ImgPipeline
$apiBase = Get-OutputValue $imgOutputs "ProcessingApiEndpoint"
$outBucket = Get-OutputValue $imgOutputs "OutputBucketName"
$resultsQueue = Get-OutputValue $imgOutputs "ResultsQueueUrl"
$wsEndpoint = Get-OutputValue $imgOutputs "WebSocketEndpoint"
$req1 = Get-OutputValue $imgOutputs "ImageRequestsQueueUrlprocessing1"
$req6 = Get-OutputValue $imgOutputs "ImageRequestsQueueUrlprocessing6"

# Recupero dinamico dell'output PacsApiSvcServiceURL*
$pacsDns = ($pacsOutputs | Where-Object { $_.OutputKey -like "PacsApiSvcServiceURL*" })[0].OutputValue


# Scrivo env.ps1
$envFile = Join-Path -Path $PSScriptRoot -ChildPath "env.ps1"
@"
# Autogenerated (dot-source me to import)
`$Env:API_BASE           = '$apiBase'
`$Env:OUTPUT_BUCKET      = '$outBucket'
`$Env:RESULTS_QUEUE      = '$resultsQueue'
`$Env:WS_ENDPOINT        = '$wsEndpoint'
`$Env:PACS_API_BASE      = 'http://$pacsDns'

`$Env:REQ1_QUEUE         = '$req1'
`$Env:REQ6_QUEUE         = '$req6'
"@ | Out-File -FilePath $envFile -Encoding UTF8 -Force

Write-Host "âœ… Ho generato env.ps1 in $envFile"
Write-Host "Per importare le variabili, esegui in PowerShell:"
Write-Host " . .\gen_env\env.ps1"
